---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../lib/utils";

export async function getStaticPaths() {
  const allPosts = await getCollection("posts");
  const uniqueCategories = new Set<string>();

  allPosts.forEach((post) => {
    post.data.categories?.forEach((category) => {
      uniqueCategories.add(category.toLowerCase()); // Normalize for URL and consistent filtering
    });
  });

  return Array.from(uniqueCategories).map((categorySlug) => {
    return {
      params: { category: categorySlug },
      props: { categoryName: categorySlug }, // Pass the normalized category name
    };
  });
}

interface Props {
  categoryName: string;
  // posts: CollectionEntry<'posts'>[]; // Not needed if fetching again, standard for Astro
}

const { categoryName } = Astro.props; // This is the lowercase category slug

const allPosts = await getCollection("posts");
const postsInThisCategory = allPosts
  .filter((post) =>
    post.data.categories?.map((c) => c.toLowerCase()).includes(categoryName),
  )
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const displayCategoryName =
  categoryName.charAt(0).toUpperCase() + categoryName.slice(1);
const pageTitle = `Posts in category: ${displayCategoryName}`;
const pageDescription = `All blog posts categorized under "${displayCategoryName}".`;
---

<Layout title={pageTitle} description={pageDescription}>
  <main>
    <h1 class="mb-8 text-3xl font-bold">{pageTitle}</h1>
    {
      postsInThisCategory.length > 0 ? (
        <ul class="flex flex-col gap-1.5">
          {postsInThisCategory.map((post) => (
            <li>
              <a
                href={`/posts/${post.slug}/`}
                class="group flex justify-between gap-3"
              >
                <span class="group-hover:underline">{post.data.title}</span>
                <span class="text-nowrap text-zinc-500">
                  {formatDate(post.data.date)}
                </span>
              </a>
            </li>
          ))}
        </ul>
      ) : (
        <p>No posts found in the category "{displayCategoryName}".</p>
      )
    }
  </main>
</Layout>
