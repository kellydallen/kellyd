---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

interface PostProps {
  posts: CollectionEntry<"blog">[];
}

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");

  const uniqueTags = [
    ...new Set(
      allPosts.map((post: CollectionEntry<"blog">) => post.data.tags).flat(),
    ),
  ] as string[];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: CollectionEntry<"blog">) =>
      post.data.tags.includes(tag),
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props as PostProps;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPost
          url={`/posts/${post.id}/`}
          postDate={post.data.pubDate}
          title={post.data.title}
        />
      ))
    }
  </ul>
</BaseLayout>
